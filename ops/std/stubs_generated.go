package stdops

import "gorgonia.org/gorgonia/exprgraph"

// Code generated by genops, which is a ops generation tool for Gorgonia. DO NOT EDIT.

// SymDiff performs the symbolic differentiation of mul.
func (op mulOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of div.
func (op divOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of pow.
func (op powOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of exp.
func (op expOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of ln.
func (op lnOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of log2.
func (op log2Op) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of neg.
func (op negOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of square.
func (op squareOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of sqrt.
func (op sqrtOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of inv.
func (op invOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of invSqrt.
func (op invSqrtOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of cube.
func (op cubeOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}

// SymDiff performs the symbolic differentiation of tanh.
func (op tanhOp) SymDiff(g *exprgraph.Graph, inputs []*exprgraph.Node, output *exprgraph.Node, grad *exprgraph.Node) (retVal []*exprgraph.Node, err error) {
	panic("not implemented")
}
